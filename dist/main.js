!function(e){var t={};function o(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,o),l.l=!0,l.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)o.d(n,l,function(t){return e[t]}.bind(null,l));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t){const o=document.getElementById("container"),n=o.children[0],l=o.children[1],r=o.children[2],s=l.querySelector("#project"),a=l.querySelector("#description"),c=l.querySelector("#notes"),i=l.querySelector("#due-date"),d=l.children[1],u=o.children[2].children[0],p=o.children[2].children[1].children[0],g=p.children;function v(){[...p.children].forEach(e=>{e.querySelector(".burger").addEventListener("click",m)})}function m(e){const t=e.target.closest("li"),o=t.children[2],n=o.children[3];t.classList.toggle("active"),o.classList.toggle("active"),n.classList.toggle("active"),t.querySelector(".burger").classList.toggle("x")}document.addEventListener("DOMContentLoaded",()=>{(null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"))).forEach(e=>{if(""===e.value)e.setAttribute("placeholder","");else{const t=`<li>\n                <div class='project-name'>${e.project}</div>\n                <div class='burger'>\n                    <div class='line1'></div>\n                    <div class='line2'></div>\n                    <div class='line3'></div>\n                </div>\n                <div class='li-content'>\n                    <div class='li-item' id='description-content'>Description: ${e.description}</div>\n                    <div class='li-item' id='dueDate-content'>Due Date: ${e.dueDate}</div>\n                    <div class='li-item' id='notes-content'>Notes: ${e.notes}</div>\n                    <div class='li-tem' id='todo-list-containert'>\n                        <ul id='todo-list'>Todo list:</ul>\n                        <div class='form'>\n                            <div class="todo-section">\n                                <input id="todo-input" type="text" autocomplete="off" required />\n                                <label for="text" class="label-name">\n                                    <span class="content-name">Todo</span>\n                                </label>\n                            </div>  \n                        </div>\n                        <button class='add-todo'>Add Todo</button>\n                    </div>\n                </div>\n            <button class='mark-as-completed'>Completed</button>\n            <button class='remove'>Remove</button>`;p.innerHTML+=t,v()}}),function(){const e=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));e.forEach((e,t)=>{"Completed"===e.status&&(g[t].children[0].style.textDecoration="line-through",g[t].children[2].remove())}),localStorage.setItem("projects",JSON.stringify(e))}(),(null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"))).forEach((e,t)=>{e.todos.forEach(e=>{const o=`<li>\n            <div class='todo-name'>${e.todo}</div>\n                <button class='mark-todo-as-completed'>Completed</button>\n                <button class='remove-todo'>Remove</button>\n            </li>`;g[t].querySelector("#todo-list").innerHTML+=o})}),function(){const e=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));e.forEach((e,t)=>{e.todos.forEach((e,o)=>{if("Completed"===e.status){const e=g[t].querySelector("ul").children[o];e.children[0].style.textDecoration="line-through",e.children[1].remove()}})}),localStorage.setItem("projects",JSON.stringify(e))}()}),d.addEventListener("click",(function(){if(""===s.value)s.setAttribute("placeholder","");else{!function(e){const t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t.push(e),localStorage.setItem("projects",JSON.stringify(t))}({project:s.value,description:a.value,dueDate:c.value,notes:i.value,status:"Uncompleted",todos:[]});const e=`<li>\n            <div class='project-name'>${s.value}</div>\n            <div class='burger'>\n                <div class='line1'></div>\n                <div class='line2'></div>\n                <div class='line3'></div>\n            </div>\n            <div class='li-content'>\n                <div class='li-item' id='description-content'>Description: ${a.value}</div>\n                <div class='li-item' id='dueDate-content'>Due Date: ${c.value}</div>\n                <div class='li-item' id='notes-content'>Notes: ${i.value}</div>\n                <div class='li-tem' id='todo-list-containert'>\n                    <ul id='todo-list'>Todo list:</ul>\n                    <div class='form'>\n                        <div class="todo-section">\n                            <input id="todo-input" type="text" autocomplete="off" required />\n                            <label for="text" class="label-name">\n                                <span class="content-name">Todo</span>\n                            </label>\n                        </div>  \n                    </div>\n                    <button class='add-todo'>Add Todo</button>\n                </div>\n            </div>\n        <button class='mark-as-completed'>Completed</button>\n        <button class='remove'>Remove</button>`;p.innerHTML+=e,s.value="",a.value="",i.value="",v()}})),p.addEventListener("click",(function(e){const t=[...p.children].findIndex(t=>t===e.target.parentNode);"mark-as-completed"===e.target.className&&(!function(e){const t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t[e].status="Completed",localStorage.setItem("projects",JSON.stringify(t))}(t),e.target.parentNode.querySelector(".project-name").style.textDecoration="line-through",e.target.parentNode.querySelector(".mark-as-completed").remove());"remove"===e.target.className&&(!function(e){const t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t.splice(e,1),localStorage.setItem("projects",JSON.stringify(t))}(t),e.target.parentNode.classList.add("fall"),e.target.parentNode.addEventListener("transitionend",()=>{e.target.parentNode.remove()}))})),document.addEventListener("click",(function(e){if("add-todo"===e.target.className){const t=e.target.parentNode.querySelector("#todo-input");if(""===t.value)t.setAttribute("placeholder","");else{!function(e,t){const o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos.push(t);const n=`<li>\n    <div class='todo-name'>${t.todo}</div>\n        <button class='mark-todo-as-completed'>Completed</button>\n        <button class='remove-todo'>Remove</button>\n    </li>`;g[e].querySelector("#todo-list").innerHTML+=n,localStorage.setItem("projects",JSON.stringify(o))}([...p.children].indexOf(e.target.closest("li")),{todo:t.value,status:"Uncompleted"}),t.value=""}}else if("mark-todo-as-completed"===e.target.className){const t=[...p.children].indexOf(e.target.closest("li.active")),o=[...e.target.closest("ul").children].indexOf(e.target.parentNode);e.target.previousElementSibling.style.textDecoration="line-through",e.target.remove(),function(e,t){const o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos[t].status="Completed",localStorage.setItem("projects",JSON.stringify(o))}(t,o)}else if("remove-todo"===e.target.className){const t=[...p.children].indexOf(e.target.closest("li.active")),o=[...e.target.closest("ul").children].indexOf(e.target.parentNode);!function(e,t){const o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos.splice(t,1),localStorage.setItem("projects",JSON.stringify(o))}(t,o),e.target.parentNode.classList.add("fall"),e.target.parentNode.addEventListener("transitionend",()=>{e.target.parentNode.remove()})}})),u.addEventListener("change",(function(e){[...p.children].forEach(t=>{"all"===e.target.value?t.style.display="block":"completed"===e.target.value?"line-through"===t.children[0].style.textDecoration?t.style.display="block":t.style.display="none":"uncompleted"===e.target.value&&("line-through"!==t.children[0].style.textDecoration?t.style.display="block":t.style.display="none")})})),n.addEventListener("click",(function(){l.classList.toggle("active"),r.classList.toggle("active")})),c.setAttribute("min",""+(new Date).toISOString().split("T")[0])}]);