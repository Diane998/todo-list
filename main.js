!function(e){var t={};function o(l){if(t[l])return t[l].exports;var n=t[l]={i:l,l:!1,exports:{}};return e[l].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,l){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(o.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(l,n,function(t){return e[t]}.bind(null,n));return l},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t){let o=document.getElementById("container"),l=o.children[0],n=o.children[1],r=o.children[2],a=n.querySelector("#project"),i=n.querySelector("#description"),s=n.querySelector("#notes"),c=n.querySelector("#due-date"),d=n.children[1],u=o.children[2].children[0],p=o.children[2].children[1].children[0],g=p.children;function v(){[...p.children].forEach(e=>{e.querySelector(".burger").addEventListener("click",m)})}function m(e){let t=e.target.closest("li"),o=t.children[2],l=o.children[3];t.classList.toggle("active"),o.classList.toggle("active"),l.classList.toggle("active"),t.querySelector(".burger").classList.toggle("x")}document.addEventListener("DOMContentLoaded",()=>{(null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"))).forEach(e=>{if(""==e.value)e.setAttribute("placeholder","");else{let t=`<li>\n                <div class='project-name'>${e.project}</div>\n                <div class='burger'>\n                    <div class='line1'></div>\n                    <div class='line2'></div>\n                    <div class='line3'></div>\n                </div>\n                <div class='li-content'>\n                    <div class='li-item' id='description-content'>Description: ${e.description}</div>\n                    <div class='li-item' id='dueDate-content'>Due Date: ${e.dueDate}</div>\n                    <div class='li-item' id='notes-content'>Notes: ${e.notes}</div>\n                    <div class='li-tem' id='todo-list-containert'>\n                        <ul id='todo-list'>Todo list:</ul>\n                        <div class='form'>\n                            <div class="todo-section">\n                                <input id="todo-input" type="text" autocomplete="off" required />\n                                <label for="text" class="label-name">\n                                    <span class="content-name">Todo</span>\n                                </label>\n                            </div>  \n                        </div>\n                        <button class='add-todo'>Add Todo</button>\n                    </div>\n                </div>\n            <button class='mark-as-completed'>Completed</button>\n            <button class='remove'>Remove</button>`;p.innerHTML+=t,v()}}),function(){let e=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));e.forEach((e,t)=>{"Completed"==e.status&&(g[t].children[0].style.textDecoration="line-through",g[t].children[2].remove())}),localStorage.setItem("projects",JSON.stringify(e))}(),(null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"))).forEach((e,t)=>{e.todos.forEach(e=>{let o=`<li>\n            <div class='todo-name'>${e.todo}</div>\n                <button class='mark-todo-as-completed'>Completed</button>\n                <button class='remove-todo'>Remove</button>\n            </li>`;g[t].querySelector("#todo-list").innerHTML+=o})}),function(){let e=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));e.forEach((e,t)=>{e.todos.forEach((e,o)=>{if("Completed"==e.status){let e=g[t].querySelector("ul").children[o];e.children[0].style.textDecoration="line-through",e.children[1].remove()}})}),localStorage.setItem("projects",JSON.stringify(e))}()}),d.addEventListener("click",(function(){if(""==a.value)a.setAttribute("placeholder","");else{!function(e){let t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t.push(e),localStorage.setItem("projects",JSON.stringify(t))}({project:a.value,description:i.value,dueDate:s.value,notes:c.value,status:"Uncompleted",todos:[]});let e=`<li>\n            <div class='project-name'>${a.value}</div>\n            <div class='burger'>\n                <div class='line1'></div>\n                <div class='line2'></div>\n                <div class='line3'></div>\n            </div>\n            <div class='li-content'>\n                <div class='li-item' id='description-content'>Description: ${i.value}</div>\n                <div class='li-item' id='dueDate-content'>Due Date: ${s.value}</div>\n                <div class='li-item' id='notes-content'>Notes: ${c.value}</div>\n                <div class='li-tem' id='todo-list-containert'>\n                    <ul id='todo-list'>Todo list:</ul>\n                    <div class='form'>\n                        <div class="todo-section">\n                            <input id="todo-input" type="text" autocomplete="off" required />\n                            <label for="text" class="label-name">\n                                <span class="content-name">Todo</span>\n                            </label>\n                        </div>  \n                    </div>\n                    <button class='add-todo'>Add Todo</button>\n                </div>\n            </div>\n        <button class='mark-as-completed'>Completed</button>\n        <button class='remove'>Remove</button>`;p.innerHTML+=e,a.value="",i.value="",s.value="",c.value="",v()}})),p.addEventListener("click",(function(e){let t=[...g].findIndex(t=>t==e.target.parentNode);"mark-as-completed"==e.target.className&&(!function(e){let t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t[e].status="Completed",localStorage.setItem("projects",JSON.stringify(t))}(t),e.target.parentNode.querySelector(".project-name").style.textDecoration="line-through",e.target.parentNode.querySelector(".mark-as-completed").remove());"remove"==e.target.className&&(!function(e){let t=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));t.splice(e,1),localStorage.setItem("projects",JSON.stringify(t))}(t),e.target.parentNode.classList.add("fall"),e.target.parentNode.addEventListener("transitionend",()=>{e.target.parentNode.remove()}))})),document.addEventListener("click",(function(e){if("add-todo"==e.target.className){let t=e.target.parentNode.querySelector("#todo-input");if(""==t.value)t.setAttribute("placeholder","");else{!function(e,t){let o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos.push(t);let l=`<li>\n    <div class='todo-name'>${t.todo}</div>\n        <button class='mark-todo-as-completed'>Completed</button>\n        <button class='remove-todo'>Remove</button>\n    </li>`;g[e].querySelector("#todo-list").innerHTML+=l,localStorage.setItem("projects",JSON.stringify(o))}([...p.children].indexOf(e.target.closest("li")),{todo:t.value,status:"Uncompleted"}),t.value=""}}else if("mark-todo-as-completed"==e.target.className){let t=[...p.children].indexOf(e.target.closest("li.active")),o=[...e.target.closest("ul").children].indexOf(e.target.parentNode);e.target.previousElementSibling.style.textDecoration="line-through",e.target.remove(),function(e,t){let o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos[t].status="Completed",localStorage.setItem("projects",JSON.stringify(o))}(t,o)}else if("remove-todo"==e.target.className){let t=[...p.children].indexOf(e.target.closest("li.active")),o=[...e.target.closest("ul").children].indexOf(e.target.parentNode);!function(e,t){let o=null==localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects"));o[e].todos.splice(t,1),localStorage.setItem("projects",JSON.stringify(o))}(t,o),e.target.parentNode.classList.add("fall"),e.target.parentNode.addEventListener("transitionend",()=>{e.target.parentNode.remove()})}})),u.addEventListener("change",(function(e){[...p.children].forEach(t=>{"all"==e.target.value?t.style.display="block":"completed"==e.target.value?"line-through"==t.children[0].style.textDecoration?t.style.display="block":t.style.display="none":"uncompleted"==e.target.value&&("line-through"!=t.children[0].style.textDecoration?t.style.display="block":t.style.display="none")})})),l.addEventListener("click",(function(){n.classList.toggle("active"),r.classList.toggle("active")})),s.setAttribute("min",""+(new Date).toISOString().split("T")[0])}]);